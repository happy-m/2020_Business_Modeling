car.lm <- lm(Price ~ ., data = train.data)
car.lm.step <- step(car.lm.null, scrpe = list(lower = car.lm.null, upper = car.lm), direction = "forward")
summary(car.lm.step)
car.lm.step3 <- step(car.lm, direction = "both")
summary(car.lm.step3)
car.lm.step3.pred <- predict(car.lm.step3, test.data)
accuracy(car.lm.step3.pred, test.data$Price)
car.lm.step3.pred <- predict(car.lm.step3, test.data)
car.lm.null <- lm(Price ~ 1, data = train.data) # predict 제외
car.lm <- lm(Price ~ ., data = train.data)
car.lm.step <- step(car.lm.null, scrpe = list(lower = car.lm.null, upper = car.lm), direction = "forward")
summary(car.lm.step)
car.lm.step2 <- step(car.lm, direction = "backward")
car.lm.step2.pred <- predict(car.lm.step2, test.data)
# 1-(1)
car <- read.csv("ToyotaCorolla.csv")
car.df <- car
View(car.df)
dim(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
# 다중 선형 모델
car.lm <- lm(Price ~ . , data = train.data) #결과 ~ predict valuable (. : 모든 변수)
options(scipen = 999) #공학계산기에 나오는 표기 없음
summary(car.lm)
library(forecast)
car.lm.pred <- predict(car.lm, valid.data)
options(scipen = 999, digits = 0)
some.residuals <- valid.data$Price[1:20] - car.lm.pred[1:20] # 실제값 - 예측값
data.frame("Predicted" = car.lm.pred[1:20], "Actual" = valid.data$Price[1:20], "Residaul" = some.residuals)
options(scipen = 999, digits = 3)
accuracy(car.lm.pred, train.data$Price)
# 1-(2) 근거
summary(car.lm)
accuracy(car.lm.pred, train.data$Price)
accuracy(car.lm.pred, valid.data$Price)
# 1-(2) 근거
summary(car.lm)
car.lm.null <- lm(Price ~ 1, data = train.data) # predict 제외
car.lm <- lm(Price ~ ., data = train.data)
car.lm.step <- step(car.lm.null, scrpe = list(lower = car.lm.null, upper = car.lm), direction = "forward")
accuracy(car.lm.step)
car.lm.step <- step(car.lm.null, scrpe = list(lower = car.lm.null, upper = car.lm), direction = "forward")
summary(car.lm.step)
#숙제 4
#1번
car.df<-read.csv("ToyotaCorolla.csv")
car.df<-car.df[1:1436,]
selected.var<-c(3,4,7,8,9,10,12,13,14,17,18)
set.seed(1)
#train
train.index<-sample(rownames(car.df),dim(car.df)[1]*0.5)
#valid
valid.index<-sample(setdiff(rownames(car.df),train.index),dim(car.df)[1]*0.3)
#test
test.index<-setdiff(rownames(car.df),union(train.index,valid.index))
#50%
train.df<-car.df[train.index,selected.var]
#30%
valid.df<-car.df[valid.index,selected.var]
#20%
test.df<-car.df[test.index,selected.var]
car.lm<-lm(Price~.,data=train.df)
options(scipen=999)
library(forecast)
car.lm.pred<-predict(car.lm,valid.df)
options(scipen = 999,digits=0)
some.residuals<-valid.df$Price[1:20]-car.lm.pred[1:20]
data.frame("Predicted"=car.lm.pred[1:20],"Actual"=valid.df$Price[1:20],"Resudual"=some.residuals)
options(scipen = 999,digits=3)
accuracy(car.lm.pred,valid.df$Price)
#2번
car.lm.null<-lm(Price~1,data=train.df)
car.lm.step<-step(car.lm.null, scope = list(lower=car.lm.null, upper=car.lm), direction = "forward")
accuracy(car.lm.step)
car.df<-car.df[1:1436,]
car.df<-car.df[1:1436,]
dim(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
# 다중 선형 모델
car.lm <- lm(Price ~ . , data = train.data) #결과 ~ predict valuable (. : 모든 변수)
options(scipen = 999) #공학계산기에 나오는 표기 없음
car.lm.pred <- predict(car.lm, valid.data)
some.residuals <- valid.data$Price[1:20] - car.lm.pred[1:20] # 실제값 - 예측값
data.frame("Predicted" = car.lm.pred[1:20], "Actual" = valid.data$Price[1:20], "Residaul" = some.residuals)
car.lm.null <- lm(Price ~ 1, data = train.data) # predict 제외
car.lm.step <- step(car.lm.null, scrpe = list(lower = car.lm.null, upper = car.lm), direction = "forward")
summary(car.lm.step)
accuracy(car.lm.step)
summary(car.lm.step)
# 1-(1)
car <- read.csv("ToyotaCorolla.csv")
car.df <- car
car.df<-car.df[1:1436,]
dim(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
dim(valid.df)
dim(test.df)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
# 다중 선형 모델
car.lm<-lm(Price~.,data=train.data)
options(scipen=999)
library(forecast)
car.lm.pred<-predict(car.lm,valid.data)
options(scipen = 999,digits=0)
some.residuals<-valid.data$Price[1:20]-car.lm.pred[1:20]
data.frame("Predicted"=car.lm.pred[1:20],"Actual"=valid.data$Price[1:20],"Resudual"=some.residuals)
options(scipen = 999,digits=3)
accuracy(car.lm.pred,valid.data$Price)
#2번
car.lm.null<-lm(Price~1,data=train.data)
car.lm.step<-step(car.lm.null, scope = list(lower=car.lm.null, upper=car.lm), direction = "forward")
# 1-(2) 근거
summary(car.lm)
# 1-(2) 근거
summary(car.lm,step)
# 1-(2) 근거
summary(car.lm.step)
accuracy(car.lm)
summary(car.lm)
summary(car.lm,step)
summary(car.lm.step)
accuracy(car.lm.step)
car.lm.step <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm), direction = "forward")
# 1-(3)번
car.lm.step.pred1 <- predict(car.lm.step, valid.data)
accuracy(car.lm.step.pred1, valid.data$Price)
car.lm.step.pred.test <- predict(car.lm.step, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
# 1-(3)번
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
# 1-(3)번
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step, test.data)
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "both")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# 1-(1)
car <- read.csv("ToyotaCorolla.csv")
car.df <- car
dim(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
# 다중 선형 모델
car.lm <- lm(Price ~ ., data = train.data)
options(scipen = 999)
library(forecast)
car.lm.pred <- predict(car.lm, valid.data)
options(scipen = 999, digits = 0)
some.residuals <- valid.data$Price[1:20] - car.lm.pred[1:20]
data.frame("Predicted" = car.lm.pred[1:20], "Actual"= valid.data$Price[1:20], "Resudual" = some.residuals)
options(scipen = 999,digits = 3)
accuracy(car.lm.pred, valid.data$Price)
# 1-(2)번
car.lm.null <- lm(Price ~ 1, data = train.data)
car.lm.step <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm), direction = "forward")
accuracy(car.lm.step)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
accuracy(car.lm.step.pred.test, test.data$Price)
# 1-(1)
car <- read.csv("ToyotaCorolla.csv")
car.df <- car
car.df<-car.df[1:1436,]
dim(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
options(scipen = 999)
library(forecast)
# 다중 선형 모델
car.lm <- lm(Price ~ ., data = train.data)
options(scipen = 999)
library(forecast)
car.lm.pred <- predict(car.lm, valid.data)
options(scipen = 999, digits = 0)
some.residuals <- valid.data$Price[1:20] - car.lm.pred[1:20]
data.frame("Predicted" = car.lm.pred[1:20], "Actual"= valid.data$Price[1:20], "Resudual" = some.residuals)
options(scipen = 999,digits = 3)
accuracy(car.lm.pred, valid.data$Price)
# 1-(2)번
car.lm.null <- lm(Price ~ 1, data = train.data)
car.lm.step <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm), direction = "forward")
accuracy(car.lm.step)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step.pred.valid, valid.data$Price)
accuracy(car.lm.step.pred.test, test.data$Price)
# 1-(1)
car <- read.csv("ToyotaCorolla.csv")
car.df <- car
dim(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
# 다중 선형 모델
car.lm <- lm(Price ~ ., data = train.data)
options(scipen = 999)
library(forecast)
car.lm.pred <- predict(car.lm, valid.data)
options(scipen = 999, digits = 0)
some.residuals <- valid.data$Price[1:20] - car.lm.pred[1:20]
data.frame("Predicted" = car.lm.pred[1:20], "Actual"= valid.data$Price[1:20], "Resudual" = some.residuals)
options(scipen = 999,digits = 3)
accuracy(car.lm.pred, valid.data$Price)
# 1-(2)번
car.lm.null <- lm(Price ~ 1, data = train.data)
car.lm.step <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm), direction = "forward")
accuracy(car.lm.step)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step.pred.valid, valid.data$Price)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step)
summary(car.lm.step)
car.lm.step <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm), direction = "forward")
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
accuracy(car.lm.step.pred.test, test.data$Price)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step.pred.valid, valid.data$Price)
accuracy(car.lm.step.pred.test, test.data$Price)
lines(car.lm.step.pred.valid, col = "red")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
library(forecast)
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
# 1-(1)
car <- read.csv("ToyotaCorolla.csv")
car.df <- car
car.df<-car.df[1:1436,]
View(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
# 다중 선형 모델
car.lm <- lm(Price ~ ., data = train.data)
options(scipen = 999)
library(forecast)
car.lm.pred <- predict(car.lm, valid.data)
options(scipen = 999, digits = 0)
some.residuals <- valid.data$Price[1:20] - car.lm.pred[1:20]
data.frame("Predicted" = car.lm.pred[1:20], "Actual"= valid.data$Price[1:20], "Resudual" = some.residuals)
options(scipen = 999,digits = 3)
accuracy(car.lm.pred, valid.data$Price)
# 1-(2)번
car.lm.null <- lm(Price ~ 1, data = train.data)
car.lm.step <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm), direction = "forward")
summary(car.lm.step)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step.pred.valid, valid.data$Price)
accuracy(car.lm.step.pred.test, test.data$Price)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
accuracy(car.lm.step.pred.valid, valid.data$Price)
accuracy(car.lm.step.pred.test, test.data$Price)
# 1-(1)
car <- read.csv("ToyotaCorolla.csv")
car.df <- car
dim(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
# 다중 선형 모델
car.lm <- lm(Price ~ ., data = train.data)
options(scipen = 999)
library(forecast)
car.lm.pred <- predict(car.lm, valid.data)
options(scipen = 999, digits = 0)
some.residuals <- valid.data$Price[1:20] - car.lm.pred[1:20]
data.frame("Predicted" = car.lm.pred[1:20], "Actual"= valid.data$Price[1:20], "Resudual" = some.residuals)
options(scipen = 999,digits = 3)
accuracy(car.lm.pred, valid.data$Price)
# 1-(2)번
car.lm.null <- lm(Price ~ 1, data = train.data)
car.lm.step <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm), direction = "forward")
summary(car.lm.step)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# 1-(1)
car <- read.csv("ToyotaCorolla.csv")
car.df <- car
car.df<-car.df[1:1436,]
dim(car.df)
train.rows <- sample(rownames(car.df), dim(car.df)[1]*0.5) # 50% 추출
selected.var <- c(3, 4, 7, 8, 9, 12, 14, 17, 19, 21, 25, 26, 28, 30, 34, 39)
train.data <- car[train.rows, selected.var]
dim(train.data)
valid.rows <- sample(setdiff(rownames(car.df), train.rows), dim(car.df)[1]*0.3) # 30% 추출
valid.data <- car[valid.rows, selected.var]
dim(valid.data)
head(valid.data)
test.rows <- setdiff(rownames(car.df), union(train.rows, valid.rows)) # 나머지 20% 추출
test.data <- car[test.rows, selected.var]
dim(test.data)
head(test.data)
# 다중 선형 모델
car.lm <- lm(Price ~ ., data = train.data)
options(scipen = 999)
library(forecast)
car.lm.pred <- predict(car.lm, valid.data)
options(scipen = 999, digits = 0)
some.residuals <- valid.data$Price[1:20] - car.lm.pred[1:20]
data.frame("Predicted" = car.lm.pred[1:20], "Actual"= valid.data$Price[1:20], "Resudual" = some.residuals)
options(scipen = 999,digits = 3)
accuracy(car.lm.pred, valid.data$Price)
# 1-(2)번
car.lm.null <- lm(Price ~ 1, data = train.data)
car.lm.step <- step(car.lm.null, scope = list(lower = car.lm.null, upper = car.lm), direction = "forward")
summary(car.lm.step)
# valid.data 적용
car.lm.valid <- lm(Price ~ ., data = valid.data)
car.lm.null.valid <- lm(Price ~ 1, data = valid.data)
car.lm.step.valid <- step(car.lm.null, scope = list(lower = car.lm.null.valid, upper = car.lm.valid), direction = "forward")
car.lm.step.pred.valid <- predict(car.lm.step.valid, valid.data)
accuracy(car.lm.step.pred.valid, valid.data$Price)
# test.data 적용
car.lm.test <- lm(Price ~ ., data = test.data)
car.lm.null.test <- lm(Price ~ 1, data = test.data)
car.lm.step.test <- step(car.lm.null, scope = list(lower = car.lm.null.test, upper = car.lm.test), direction = "forward")
car.lm.step.pred.test <- predict(car.lm.step.test, test.data)
accuracy(car.lm.step.pred.test, test.data$Price)
accuracy(car.lm.step.pred.valid, valid.data$Price)
